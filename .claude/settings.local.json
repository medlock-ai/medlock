{
  "permissions": {
    "allow": [
      "WebFetch(domain:developers.cloudflare.com)",
      "Bash(find:*)",
      "Bash(npm install:*)",
      "Bash(mkdir:*)",
      "Bash(npm run test:ci:*)",
      "Bash(npx husky init:*)",
      "Bash(ls:*)",
      "Bash(npm run format:*)",
      "Bash(npm run check-all:*)",
      "Bash(prettier:*)",
      "Bash(npx prettier:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh pr:*)",
      "Bash(gh api:*)",
      "Bash(git pull:*)",
      "Bash(git stash:*)",
      "Bash(git reset:*)",
      "Bash(rm:*)",
      "Bash(git checkout:*)",
      "Bash(gh run watch:*)",
      "Bash(gh run cancel:*)",
      "Bash(npm run build:next:*)",
      "Bash(timeout 30 npm run build)",
      "Bash(npm run build:*)",
      "Bash(gh label create:*)",
      "Bash(gh workflow run:*)",
      "Bash(-f 'required_status_checks[strict]=true' )",
      "Bash(-f 'required_status_checks[contexts][]=Test, Lint, and Type Check' )",
      "Bash(-f 'enforce_admins=false' )",
      "Bash(-f 'required_pull_request_reviews=null' )",
      "Bash(-f 'restrictions=null' )",
      "Bash(-f 'allow_force_pushes=false' )",
      "Bash(-f 'allow_deletions=false' )",
      "Bash(-f 'required_linear_history=false' )",
      "Bash(-f 'allow_squash_merge=true' )",
      "Bash(-f 'allow_merge_commit=false' )",
      "Bash(-f 'allow_rebase_merge=false')",
      "Bash(--method PUT )",
      "Bash(--input /tmp/branch-protection.json)",
      "Bash(--method PATCH )",
      "Bash(--field strict=true )",
      "Bash(--field 'contexts[]=Test, Lint, and Type Check' )",
      "Bash(--field 'contexts[]=Workers Builds: healthmcp')",
      "WebFetch(domain:dash.cloudflare.com)",
      "Bash(npm run test:*)",
      "Bash(npm run lint:*)",
      "Bash(npm test)",
      "Bash(npm test:*)",
      "Bash(git branch:*)",
      "WebFetch(domain:your-domain.com)",
      "Bash(npx wrangler tail:*)",
      "WebFetch(domain:opennext.js.org)",
      "Bash(grep:*)",
      "WebFetch(domain:modelcontextprotocol.io)",
      "Bash(pnpm test:*)",
      "Bash(yarn test)",
      "Bash(yarn install)",
      "Bash(npm search:*)",
      "Bash(npm view:*)",
      "Bash(curl:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(yarn add:*)",
      "Bash(yarn remove:*)",
      "Bash(yarn why:*)",
      "Bash(yarn test:*)",
      "Bash(rg:*)",
      "Bash(mv:*)",
      "Bash(gh repo view:*)",
      "Bash(--input oauth-app.json )",
      "Bash(--jq '{client_id: .client_id, client_secret: .client_secret}')",
      "Bash(gh auth:*)",
      "Bash(git mv:*)",
      "Bash(true)",
      "Bash(git rm:*)",
      "Bash(yarn --version)",
      "Bash(yarn set version:*)",
      "Bash(npx wrangler kv namespace:*)",
      "Bash(npx tsc:*)",
      "Bash(sed:*)",
      "Bash(npm run type-check:*)",
      "Bash(cat:*)",
      "Bash(yarn typecheck)",
      "Bash(rm:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(mkdir:*)",
      "Bash(test -f yarn.lock)",
      "Bash(grep:*)",
      "Bash(wrangler kv namespace:*)",
      "Bash(mv:*)",
      "WebFetch(domain:opennext.js.org)",
      "Bash(diff:*)",
      "WebFetch(domain:developers.cloudflare.com)",
      "Bash(gh pr create:*)",
      "Bash(gh pr checkout:*)",
      "Bash(gh pr diff:*)"
    ],
    "deny": []
  }
}